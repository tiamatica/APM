 R←Test_Packages_004(stopFlag batchFlag);⎕TRAP;dir;src;dist;lines;cfg;rc;msg;zipfile;ns
⍝ Pack a single file with non-default parameters and load it
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←T._Failed

 :If 1   ⍝TODO⍝
     →0,R←T._Inactive
 :EndIf

 dir←getTempDir ⍬
 (src dist)←(⊂dir,'/'),¨'src' 'dist'
 3 ⎕MKDIR src dist

⍝ create Package
 lines←':Namespace Test' 'foo←{⍵}' ':EndNamespace'
 (⊂lines)⎕NPUT src,'/Test.apln'
 cfg←APM.InitPackageConfig ⍬
 cfg.api←
 cfg.dependencies←cfg.devDependencies←'' ⍝ These are tested separately
 cfg.files←
 cfg.group←'Example'
 cfg.name←'MyPackage'
 cfg.source←'Test.apln'
 cfg.version←'0.1.0'
 (⊂APM.JSON cfg)⎕NPUT src,'/',APM.CFG_NAME
 (rc msg zipfile)←APM.Pack src dist ⍝ now Pack it
 →T.GoToTidyUp 0≠rc
 →T.GoToTidyUp 0=≢zipfile

 (rc msg cfg)←APM.Load'file://',zipfile
 →T.GoToTidyUp 0≠rc
 ns←⍎cfg.nspath
 →T.GoToTidyUp(,⊂'Test')≢ns.⎕NL-⍳10
 →T.GoToTidyUp'ok'≢ns.Test.foo'ok'
 R←T._OK

∆TidyUp:
 :Trap 6 ⋄ ⎕EX⍕ns ⋄ :EndTrap
 3 ⎕NDELETE dir
⍝Done
