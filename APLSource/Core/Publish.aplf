 Publish←{
     source registry←⍵
     ⍝ source → folder to create package from.\\
     ⍝ registry → registry to publish package to (alias or uri).\\
     ⍝ Result:
     ⍝ 1. rc  ← 0 if OK, error otherwise
     ⍝ 2. msg ← result

     rc msg cfg←ReadGlobalConfig''
     uri←cfg{
         0=≢⍺.registries:⍵
         (⍺.registries.alias⍳⊂⍵)⊃⍺.registries.uri,⊂⍵
     }registry
     type←'file://'
     type≢(≢type)↑uri:1 'Only file URI supported'
     path←UriToPath uri

     ⍝ Package
     rc msg zipfile←Pack source(GetTempDir)
     0≠rc:rc zipfile
     rc msg cfg←ReadConfig source
     0≠rc:rc msg
     rc msg ind←GetRegistryIndex path
     0≠rc:rc msg

     ⍝ validate package and ensure uniqueness in registry
     exists←ind{
         0=≢⍺:0
         (⊂⍵)∊⍺.(group name version)
     }cfg.(group name version)

     exists:1 'Version conflict, package versions must be unique'

     tgt←path,'/packages/',cfg.group,'/',cfg.name,'/'
     rc←3 ⎕MKDIR tgt
     rc←tgt ⎕NMOVE zipfile
     pcfg←cfg.⎕NS'group' 'name' 'version' 'dependencies'
⍝     pcfg.dependencies←{
⍝         0∊⍴⍵:⍬
⍝         ⍵.(group,'/',name,'/',version)
⍝     }cfg.dependencies
     rc←(ind,pcfg)PutRegistryIndex path
     0≠rc:rc'Failed updating index'

     0 ''
 }
